import java.text.SimpleDateFormat

plugins {
    id "java-library"
    id "idea"
    id "eclipse"
    id 'maven-publish'
    id 'signing'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'jacoco'
}

group = 'io.github.joealisson'
version = '2.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11

ext.moduleName = 'io.github.joealisson.primitive'
ext.revision = versioning.info.build
ext.buildJDK = "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString()


sourceSets {
    main {
        java {
            srcDirs = ['src/main/io.github.joealisson.primitive']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

repositories {
    mavenCentral()
}

compileJava {
    inputs.property("moduleName", moduleName)

    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "--add-exports" << "java.base/jdk.internal.misc=io.github.joealisson.primitive"
}

jar {
    manifest {
        attributes('Built-By'       : System.getProperty('user.name'),
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Automatic-Module-Name': 'io.github.joealisson.primitive',
                'Build-Revision' : revision,
                'Build-Version'  : version,
                'Build-Jdk'      : buildJDK)
    }
}

task jarSources(type:Jar){
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.addStringOption('-module-path', classpath.asPath )
        options.addStringOption("-add-exports", "java.base/jdk.internal.misc=io.github.joealisson.primitive")
    }
}

task javadocJar(type: Jar) {
    archiveVersion = 'javadoc'
    from javadoc
}

publishing {
    publications {

        maven(MavenPublication) {
            from components.java

            artifact jarSources
            artifact javadocJar

            tasks.withType(Jar) {
                from(project.projectDir) {
                    include 'LICENSE'
                    into 'META-INF'
                }
            }

            pom {
                name = 'Primitive Collections'
                description = 'Primitive collections framework based on Java Collections API'
                url = 'https://github.com/JoeAlisson/napile.primitive'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://opensource.org/licenses/AGPL-3.0'
                    }
                }
                developers {
                    developer {
                        id = 'JoeAlisson'
                        name = 'Alisson Oliveira'
                        email = 'joe.alisson@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/JoeAlisson/napile.primitive.git'
                    developerConnection = 'scm:git:ssh://github.com:JoeAlisson/napile.primitive.git'
                    url = 'https://github.com/JoeAlisson/apile.primitive.git/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}